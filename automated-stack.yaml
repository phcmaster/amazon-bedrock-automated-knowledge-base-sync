AWSTemplateFormatVersion: '2010-09-09'
Description: Automatic sync for Amazon Bedrock Knowledge Base Ingestion. v0.0.1

Parameters:
  S3BucketName:
    Type: String
    Description: Name of the S3 bucket for the knowledge base

  DataSourceId:
    Type: String
    MinLength: 1
    MaxLength: 10
    Description: Data source ID from knowledge base

  KnowledgeBaseId:
    Type: String
    MinLength: 1
    MaxLength: 10
    Description: knowledgeBaseId ID from knowledge base

Resources:

  # IAM Role for the Lambda function
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AmazonBedrockFullAccess

  # Lambda Function to trigger Bedrock Ingestion
  BedrocKIngestionFunction:
    Type: AWS::Lambda::Function
    Properties:
      Runtime: python3.12
      Handler: index.lambda_handler
      Code:
        ZipFile: |
          import boto3
          import json
          import os
          import uuid

          bedrock = boto3.client('bedrock-agent')

          dataSourceId = os.environ['DATA_SOURCE_ID']
          knowledgeBaseId = os.environ['KB_ID']

          def lambda_handler(event, context):
              
              s3bucketName = event['Records'][0]['s3']['bucket']['name']
              
              description = 'new object received at {0} bucket.'.format(s3bucketName)
              
              bedrock.start_ingestion_job(
                  clientToken= str(uuid.uuid4()),
                  dataSourceId= dataSourceId,
                  description= description,
                  knowledgeBaseId= knowledgeBaseId

              )
              
              return {
                  'statusCode': 200,
                  'body': json.dumps('Ingestion job started for knowledgeBaseId={0}'.format(knowledgeBaseId))
              }
      Role: !GetAtt LambdaExecutionRole.Arn
      Environment:
        Variables:
          DATA_SOURCE_ID: !Ref DataSourceId
          KB_ID: !Ref KnowledgeBaseId


  # EventBridge Rule to trigger the Lambda function
  BedrocKIngestionEventRule:
    Type: AWS::Events::Rule
    Properties:
      Description: Rule to trigger objects created on S3 bucket.
      EventPattern:
        source:
          - "aws.s3"
        detail-type:
          - "Object Created"
        detail:
          bucket-name:
            - !Ref S3BucketName
      Targets:
        - Arn: !GetAtt BedrocKIngestionFunction.Arn
          Id: BedrocKIngestionFunction
 
  PermissionForEventsToInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt BedrocKIngestionFunction.Arn
      Action: "lambda:InvokeFunction"
      Principal: events.amazonaws.com
      SourceArn: !GetAtt BedrocKIngestionEventRule.Arn

Outputs:
  LambdaFunctionName:
    Description: Name of the Lambda function
    Value: !Ref BedrocKIngestionFunction
  EventRuleName:
    Description: Name of the EventBridge rule
    Value: !Ref BedrocKIngestionEventRule